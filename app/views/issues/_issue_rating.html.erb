<%
# Check if module is enabled and if user can rate issue in current project.
# TODO: This should perhaps be in the controller?
if @project.module_enabled?(:issue_rating) && User.current.allowed_to?(:rate_issue, @project)
  # Check the issue status. Settings 'issue_rating_statuses': array of strings.
  issue_rating_statuses = Setting.plugin_issue_rating['issue_rating_statuses']
  if issue_rating_statuses.include?(@issue.status_id.to_s)
    # Check the user is the assignee.
    if @issue.assigned_to_id == User.current.id
      # Get latest rating for issue (no matter the user).
      issue_rating_latest = IssueRating.where(issue_id: @issue.id).order(updated_at: :desc).first
      # Display the feedback widget.
%>
<hr>
<p><strong>Feedback</strong></p>
<p>On a scale of 1 to 5, how satisfied are you with Code Enigma services?</p>
<div id="issue_rating" ></div>
<% # Instantiate jquery.raty.js on div#issue_rating (tag above). %>
<script>
$(document).ready(function(){
  $('#issue_rating').raty({
		path: '/plugin_assets/issue_rating/images/',
		<% # To use font stars instead of images, set option: starType: 'i', %>
		starType: 'i',
    <% if issue_rating_latest.nil? %>
    score: 0,
    <% else %>
    score: <%= issue_rating_latest.rating_val %>,
    <% end %>
    readOnly: false,
    <% # Declare on click ajax callback to update issue rating in DB. %>
    click: function(score, evt) {
      $.ajax({
        url: '/ratings/update_rating/' + <%= @issue.id %>,
        dataType: 'json',
        type: 'PATCH',
        data: { rating: score }
      }).done(function (data){});
    },
  });
});
</script>
<%
    end
  end
end
%>
